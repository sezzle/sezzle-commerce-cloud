(function () {
	/**
	 * Creates library-wrapper for Sezzle API
	 *
	 * @constructor
	 * @this {Api}
	 * @returns Api instance
	 */
	var Api = function () {
		var self = this,
			sezzleData = require('int_sezzle/cartridge/scripts/data/sezzleData.ds'),
			logger = require('dw/system').Logger.getLogger('Sezzle', ''),
			service = require('dw/svc');
		
		/**
		 * Update order by charge ID
		 *
		 * @param {string} chargeId
		 * @returns {Object} charge update event object
		 */
		self.authenticate = function () {
			try {
				var sezzleService = service.ServiceRegistry.get('sezzle.authenticate');
				var public_key = sezzleData.getPublicKey();
				var private_key = sezzleData.getPrivateKey();
					
				sezzleService.URL = sezzleData.getURLPath() + 'authentication/';
				logger.info('authenticating');
				logger.info(sezzleService.URL)
				var resp = sezzleService.call({
					'public_key' : public_key,
					'private_key' : private_key
				});
				logger.info('resp')
				logger.info(resp)
				return resp.object;
			} catch (e) {
				logger.error('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Get charge object by token
		 *
		 * @param {string} token that was POSTed to the pipeline COPlaceOrder-Start
		 * @returns {Object} charge object
		 */
		self.auth = function (token) {
			try {
				var sezzleService = service.ServiceRegistry.get('sezzle.auth');
					
				sezzleService.URL = sezzleData.getURLPath() + 'charges';
				
				return sezzleService.call({
						'checkout_token' : token
					}).object;
			} catch (e) {
				logger.error('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Capture charge by charge ID
		 *
		 * @param {string} chargeId
		 * @returns {Object} charge capture event object
		 */
		self.capture = function (order_reference_id) {
			try {
				var authentication = self.authenticate();
				var obj = {
					authToken : authentication.response.token
				}
				
				var sezzleService = service.ServiceRegistry.get('sezzle.capture');
				sezzleService.URL = sezzleData.getURLPath() + 'checkouts/' + order_reference_id + '/complete';
				
				return sezzleService.call(obj).object;
			} catch (e) {
				logger.error('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Void charge by charge ID
		 *
		 * @param {string} chargeId
		 * @returns {Object} charge void event object
		 */
		self.void = function (chargeId) {
			try {
				var sezzleService = service.ServiceRegistry.get('sezzle.void');
					
				sezzleService.URL = sezzleData.getURLPath() + 'charges/' + chargeId + '/void';
				
				return sezzleService.call().object;
			} catch (e) {
				logger.error('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Refund charge by charge ID
		 *
		 * @param {string} chargeId
		 * @returns {Object} charge refund event object
		 */
		self.refund = function (order_reference_id) {
			try {
				var authentication = self.authenticate();
				var obj = {
					authToken : authentication.response.token
				}
				var sezzleService = service.ServiceRegistry.get('sezzle.refund');
					
				sezzleService.URL = sezzleData.getURLPath() + 'orders/' + order_reference_id + '/refund';
				
				return sezzleService.call(obj).object;
				
			} catch (e) {
				logger.error('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Update order by charge ID
		 *
		 * @param {string} chargeId
		 * @returns {Object} charge update event object
		 */
		self.update = function (chargeId, updateData) {
			try {
				var sezzleService = service.ServiceRegistry.get('sezzle.update');
					
				sezzleService.URL = sezzleData.getURLPath() + 'charges/' + chargeId + '/update';
				
				return sezzleService.call(updateData).object;
			} catch (e) {
				logger.error('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
	};
	
	module.exports = new Api();
}());