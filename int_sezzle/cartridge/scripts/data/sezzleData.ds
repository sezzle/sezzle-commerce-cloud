(function () {
	/**
	 * Library for providing access to DW site preferences and resources
	 *
	 * @constructor
	 * @this {Data}
	 * @returns Data instance
	 */
	var Data = function () {
		var system = require('dw/system'),
			web = require('dw/web'),
			currentSite = system.Site.getCurrent(),
			mode = !empty(currentSite.getCustomPreferenceValue('SezzleMode')) ?
					currentSite.getCustomPreferenceValue('SezzleMode').getValue() :
					'sandbox';
		
		/**
		 * Return Sezzle public key
		 *
		 * @returns {string} public key
		 */
		this.getPublicKey = function () {
			return currentSite.getCustomPreferenceValue('SezzlePublicKey');
		};
		
		/**
		 * Return Sezzle private key
		 *
		 * @returns {string} private key
		 */
		this.getPrivateKey = function () {
			return currentSite.getCustomPreferenceValue('SezzlePrivateKey');
		};
		
		/**
		 * Return Sezzle Online Status preference
		 *
		 * @returns {boolean} Promo text
		 */
		this.getSezzleOnlineStatus = function () {
			return !empty(currentSite.getCustomPreferenceValue('SezzleOnline')) ?
					currentSite.getCustomPreferenceValue('SezzleOnline') :
					false;
		};
		
		/**
		 * Return Sezzle Payment Action preference
		 *
		 * @returns {string} Promo text
		 */
		this.getSezzlePaymentAction = function () {
			return !empty(currentSite.getCustomPreferenceValue('SezzlePaymentAction')) ?
					currentSite.getCustomPreferenceValue('SezzlePaymentAction').getValue() :
					'';
		};
		
		/**
		 * Return Sezzle URL path from resource file
		 *
		 * @returns {string} URL path
		 */
		this.getURLPath = function () {
			return web.Resource.msg('sezzle.' + mode + '.url', 'sezzle', null);
		};
		
		
		/**
		 * Return Sezzle JS path from resource file
		 *
		 * @returns {string} JS path
		 */
		this.getJSPath = function () {
			return web.Resource.msg('sezzle.' + mode + '.js', 'sezzle', null);
		};
		
		/**
		 * Return status of promo message on cart page
		 *
		 * @returns {boolean} cart promo status
		 */
		this.getCartPromoMessageStatus = function () {
			return !!currentSite.getCustomPreferenceValue('SezzleCartPromoMessage');
		};
		
		/**
		 * Return status of promo message on PLP pages
		 *
		 * @returns {boolean} plp promo status
		 */
		this.getPLPPromoMessageStatus = function () {
			return !!currentSite.getCustomPreferenceValue('SezzlePLPPromoMessage');
		};
		
		/**
		 * Return status of promo message on product page
		 *
		 * @returns {boolean} pdp promo status
		 */
		this.getProductPromoMessageStatus = function () {
			return !!currentSite.getCustomPreferenceValue('SezzleProductMessage');
		};
		
		/**
		 * Return financing program to cart total mapping
		 *
		 * @returns {array} array of string
		 */
		this.getCartTotalMapping = function () {
			return currentSite.getCustomPreferenceValue('SezzleFPTotalRange');
		};
		
		/**
		 * Return default financing program
		 *
		 * @returns {string} default financing program
		 */
		this.getDefaultFinancingProgram = function () {
			return currentSite.getCustomPreferenceValue('SezzleDefaultFP');
		};
		
		/**
		 * Return financing program to customer group mapping
		 *
		 * @returns {array} array of string
		 */
		this.getCustomerGroupMapping = function () {
			return currentSite.getCustomPreferenceValue('SezzleFPCustomerGroup');
		};

		/**
		 * @description Due to CyberSource changes payment can be disabled from the BM (Requirement 09.12.2017)
		 * @returns {Boolean}
		 */
		this.getSezzlePaymentOnlineStatus = function() {
			return currentSite.getCustomPreferenceValue('SezzlePaymentOnlineStatus');
		};
		
		/**
		 * Return financing program to date mapping
		 *
		 * @returns {array} array of string
		 */
		this.getDateRangeMapping = function () {
			return currentSite.getCustomPreferenceValue('SezzleFPDateRange');
		};
		
		/**
		 * Return sezzle VCN status
		 *
		 * @returns {string} status on|off
		 */
		this.getSezzleVCNStatus = function () {
			return currentSite.getCustomPreferenceValue('SezzleVCNIntegration');
		};
		
		/**
		 * Return sezzle minimal applying total
		 *
		 * @returns {Number} minimal applying total
		 */
		this.getSezzleMinTotal = function () {
			return currentSite.getCustomPreferenceValue('SezzleMinTotal');
		};
		
		/**
		 * Return sezzle minimal applying total
		 *
		 * @returns {Number} minimal applying total
		 */
		this.getSezzlePaymentMinTotal = function () {
			return currentSite.getCustomPreferenceValue('SezzlePaymentMinTotal');
		};
		
		/**
		 * Return sezzle maximal applying total
		 *
		 * @returns {Number} maximal applying total
		 */
		this.getSezzlePaymentMaxTotal = function () {
			return currentSite.getCustomPreferenceValue('SezzlePaymentMaxTotal');
		};

		this.getErrorMessages = function(){
			return JSON.stringify({
				'closed': web.Resource.msg('sezzle.error.closed', 'sezzle', ''),
				'default': web.Resource.msg('sezzle.error.default', 'sezzle', '')
			});
		}

		/**
		 * Return sezzle VCN disable status
		 *
		 * @returns {Boolean} 
		 */

		this.VCNPaymentInstrument = function(){
			return currentSite.getCustomPreferenceValue('SezzleVCNPaymentInstrument');
		}

		/**
		 * Return sezzle Checkout Flow mode
		 *
		 * @returns {String} status modal|redirect 
		 */

		 this.getSezzleModalEnable = function(){
		 	return currentSite.getCustomPreferenceValue('SezzleModalEnable').getValue();
		 }
	};

	module.exports = new Data();
}());