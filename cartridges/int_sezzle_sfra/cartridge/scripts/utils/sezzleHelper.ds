'use strict';

/**
 * Controller that renders the home page.
 *
 * @module controllers/Sezzle
 */
var SEZZLE_PAYMENT_METHOD = 'Sezzle';
var Resource = require('dw/web/Resource');
var URLUtils = require('dw/web/URLUtils');
var server = require('server');
var BasketMgr = require('dw/order/BasketMgr');
var ISML = require('dw/template/ISML');
var sezzle = require('*/cartridge/scripts/sezzle.ds');
var COHelpers = require('*/cartridge/scripts/checkout/checkoutHelpers');


var Status = require('dw/system/Status');
var Transaction = require('dw/system/Transaction');
var PaymentMgr = require('dw/order/PaymentMgr');
var Order = require('dw/order/Order');
var PaymentMgr = require('dw/order/PaymentMgr');
var parametersMap = request.httpParameterMap;
var logger = require('dw/system').Logger.getLogger('Sezzle', '');

/*
 * Export the publicly available controller methods
 */

function checkCart(cart) {
    var basket = 'object' in cart ? cart.object : cart;

    var paymentInstruments = basket.paymentInstruments;
    var paymentMethod = '';

    for (var i = 0; i < paymentInstruments.length; i++) {
        var paymentInstrument = paymentInstruments[i];
        paymentMethod = paymentInstrument.paymentMethod;
    }

    if (!paymentInstruments) {
        return {
            status: {
                error: true
            }
        };
    }

    if (!sezzle.data.getSezzleOnlineStatus() || paymentMethod != 'Sezzle') {
        return {
            status: {
                error: false
            }
        };
    }
    return {
        status: {
            error: false
        }
    };
}

function postProcess(order) {
    var logger = require('dw/system').Logger.getLogger('Sezzle', '');
    if (sezzle.data.getSezzlePaymentAction() == 'CAPTURE') {
        try {
            Transaction.wrap(function () {
                sezzle.order.captureOrder(order.custom.SezzleExternalId, order.orderNo);
                order.custom.SezzleStatus = 'CAPTURE';
                order.setPaymentStatus(Order.PAYMENT_STATUS_PAID);
                order.setStatus(Order.ORDER_STATUS_COMPLETED);
            });
        } catch (e) {
            sezzle.order.voidOrder(order.custom.SezzleExternalId);
            logger.error('Sezzle Capturing error. Details - {0}', e);
            return false;
        }
    }
    return true;
}


function init(basket, applicablePaymentMethods) {
    return sezzle.basket.validatePayments(basket, applicablePaymentMethods);
}

/**
 * Check if Sezzle payment method can be applicable for checkout
 */

function isSezzleApplicable() {
    var basket = BasketMgr.getCurrentBasket();
    if (!basket.getGiftCertificateLineItems().empty || !sezzle.data.getSezzleOnlineStatus() || sezzle.data.getSezzlePaymentOnlineStatus() || !sezzle.utils.checkBasketTotalRange('object' in basket ? basket.object : basket)) {
        return false;
    }

    return true;
}

module.exports = {
    Init: init,
    CheckCart: checkCart,
    PostProcess: postProcess,
    IsSezzleApplicable: isSezzleApplicable
};
