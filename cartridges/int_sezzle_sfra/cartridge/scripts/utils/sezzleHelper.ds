'use strict';

/**
 * Controller that renders the home page.
 *
 * @module controllers/Sezzle
 */
var SEZZLE_PAYMENT_METHOD = 'Sezzle';
var Resource = require('dw/web/Resource');
var URLUtils = require('dw/web/URLUtils');
var server = require('server');
var BasketMgr = require('dw/order/BasketMgr');
var ISML = require('dw/template/ISML');
var sezzle = require('int_sezzle_sfra/cartridge/scripts/sezzle.ds');
var COHelpers = require('*/cartridge/scripts/checkout/checkoutHelpers');
 
 
var Status = require('dw/system/Status');
var Transaction = require('dw/system/Transaction');
var PaymentMgr = require('dw/order/PaymentMgr');
var Order = require('dw/order/Order');
var PaymentMgr = require('dw/order/PaymentMgr');
var parametersMap = request.httpParameterMap;

/*
 * Export the publicly available controller methods
 */

function checkCart(cart) {
	var basket = 'object' in cart ? cart.object : cart;
	var logger = require('dw/system').Logger.getLogger('Snow', '');
	
	if (!cart.paymentInstrument){
		logger.debug('34');
		return {
			status:{
					error: true
				}
		}
	}
	var selectedPaymentMethod = cart.paymentInstrument.paymentMethod;
	if (!sezzle.data.getSezzleOnlineStatus() || selectedPaymentMethod != 'Sezzle'){
		logger.debug('43');
		return {
			status: new Status(Status.OK),
			authResponse: null
		};
	}
	if (sezzle.data.getSezzleVCNStatus() == 'on'){
		if (basket.totalGrossPrice.value != session.custom.sezzleTotal || basket.giftCertificateTotalPrice.value > 0){
			logger.debug('51');
			return {
				status:{
					error: true,
					PlaceOrderError: new Status(Status.ERROR, 'basket.changed.error')
				}
			};
		} else {
			return {
				status:{
					error: false
				}
			};
		}
	} else {
		var test = parametersMap;
		var token = parametersMap.checkout_token.stringValue;
		if (empty(token)) {
			logger.debug('69');
			return {
				status:{
					error: true,
					PlaceOrderError: new Status(Status.ERROR, 'confirm.error.technical')
				}
			};
		}
		var sezzleResponse = sezzle.order.authOrder(token);
		session.custom.sezzleResponseID = sezzleResponse.response.id;
		session.custom.sezzleFirstEventID = sezzleResponse.response.events[0].id;
		session.custom.sezzleAmount = sezzleResponse.response.amount;
		if (empty(sezzleResponse) || sezzleResponse.error){
			logger.debug('82');
			return {
				status:{
					error: true,
					PlaceOrderError: new Status(Status.ERROR, 'confirm.error.technical')
				}
			};
		}
		var sezzleStatus = sezzle.basket.syncBasket(basket, sezzleResponse.response);
		if (sezzleStatus.error){
			sezzle.order.voidOrder(sezzleResponse.response.id);
			logger.debug('93');
            return {
    			status:{
    				error: sezzleStatus.error,
    				PlaceOrderError: new Status(Status.ERROR, 'basket.changed.error')
    			}
    		};
        } else {
            return {
                status: {
                    error: false
                }
            }
        }
		
	}
}

function postProcess(order){
	var logger = require('dw/system').Logger.getLogger('Sezzle', '');
	if (sezzle.data.getSezzlePaymentAction() == 'CAPTURE'){
		try {
			Transaction.wrap(function(){
				sezzle.order.captureOrder(order.custom.SezzleExternalId, order.orderNo);
				order.custom.SezzleStatus = 'CAPTURE';
				order.setPaymentStatus(Order.PAYMENT_STATUS_PAID);
				order.setStatus(Order.ORDER_STATUS_COMPLETED);
			});
		} catch (e) {
			sezzle.order.voidOrder(order.custom.SezzleExternalId);
			logger.error('Sezzle Capturing error. Details - {0}', e);
			return new Status(Status.ERROR);
		}
	}
	return new Status(Status.OK);
}

function redirect() {
	var logger = require('dw/system').Logger.getLogger('Snow', '');
	logger.debug('redirection');
	if(server.forms.getForm('billing').paymentMethod == SEZZLE_PAYMENT_METHOD  && sezzle.data.getSezzleVCNStatus() != 'on'){
	var basket = BasketMgr.getCurrentBasket();	
		
	res.render('sezzle/sezzlecheckout_mf',{
			Basket : basket
	});
		 return true;
	} else {
		return false;
	}
}


function init(basket, applicablePaymentMethods) {
	return sezzle.basket.validatePayments(basket, applicablePaymentMethods);
}

/**
 * Check if Sezzle payment method can be applicable for checkout 
 */

function isSezzleApplicable(){
	var basket = BasketMgr.getCurrentBasket();
	if (!basket.getGiftCertificateLineItems().empty || !sezzle.data.getSezzleOnlineStatus() || sezzle.data.getSezzlePaymentOnlineStatus() || !sezzle.utils.checkBasketTotalRange('object' in basket ? basket.object : basket)) {
		return false;	
	}

	return true;
}


/**
 * Redirects customer to sezzle's checkout if sezzle is enabled and there is no
 * gift certificates in basket
 */

module.exports = {
		Redirect: redirect,
		Init: init,
		CheckCart: checkCart,
		PostProcess: postProcess,
		IsSezzleApplicable: isSezzleApplicable
}
