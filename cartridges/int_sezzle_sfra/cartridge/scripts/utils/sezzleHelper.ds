'use strict';

/**
 * Controller that renders the home page.
 *
 * @module controllers/Sezzle
 */
var SezzlePaymentMethod = 'Sezzle';
var Resource = require('dw/web/Resource');
var URLUtils = require('dw/web/URLUtils');
var server = require('server');
var BasketMgr = require('dw/order/BasketMgr');
var ISML = require('dw/template/ISML');
var sezzle = require('*/cartridge/scripts/sezzle.ds');
var sezzleApi = require('*/cartridge/scripts/api/sezzleAPI.ds');
var COHelpers = require('*/cartridge/scripts/checkout/checkoutHelpers');
var sezzleData = require('~/cartridge/scripts/data/sezzleData.ds');
 
 
var Status = require('dw/system/Status');
var Transaction = require('dw/system/Transaction');
var PaymentMgr = require('dw/order/PaymentMgr');
var Order = require('dw/order/Order');
var parametersMap = request.httpParameterMap;
var logger = require('dw/system').Logger.getLogger('Sezzle', '');

/*
 * Export the publicly available controller methods
 */

function checkCart(cart) {
	var basket = 'object' in cart ? cart.object : cart;
	
	var paymentInstruments = basket.paymentInstruments;
	var paymentMethod = "";
	
	for (var i = 0; i < paymentInstruments.length; i++) {
        var paymentInstrument = paymentInstruments[i];
        paymentMethod = paymentInstrument.paymentMethod;
    }
	
	if (!paymentInstruments){
		return {
			status:{
					error: true
				}
		}
	}
	
	if (!sezzle.data.getSezzleOnlineStatus() || paymentMethod != 'Sezzle'){
		return {
			status: {
				error : false
			}
		};
	} else {
            return {
                status: {
                    error: false
                }
            }
    }
}

function storeTokenizeRecord(customerNo, token, tokenExpiration) {
	Transaction.wrap(function () {
		var tokenizeRecord = dw.object.CustomObjectMgr.createCustomObject('SezzleTokenize', customerNo);
		tokenizeRecord.custom.token = token;
		tokenizeRecord.custom.is_approved = true;
		tokenizeRecord.custom.expiration = tokenExpiration;
	});
}

function postProcess(order, canAuthorize){
	var logger = require('dw/system').Logger.getLogger('Sezzle', '');
	var paymentAction = sezzleData.getSezzlePaymentAction();
	var doCapture = paymentAction == 'CAPTURE' ? true : false;
	try {
		Transaction.wrap(function(){
			if (canAuthorize) {
				var authorizeResponse = sezzle.order.authorizePayment(order, doCapture);
				if (!authorizeResponse.error) {
					order.custom.SezzleAuthUUID = authorizeResponse.response.uuid;
					if (!doCapture) {
						order.custom.SezzleAuthExpiration = authorizeResponse.response.expiration;
					}
				}
			}
			if (doCapture) {
				if (!canAuthorize) {
					sezzle.order.captureOrder(order);
				}
				order.custom.SezzleCapturedAmount = order.totalGrossPrice.toString();
				order.setPaymentStatus(Order.PAYMENT_STATUS_PAID);
				order.setStatus(Order.ORDER_STATUS_COMPLETED);
				
			} 
			if (order.custom.SezzleOrderUUID){
				var sezzleOrder = sezzle.order.getOrderByOrderUUID(order.custom.SezzleOrderUUID);
				if (!sezzleOrder.error) {
					order.custom.SezzleAuthExpiration = sezzleOrder.response.authorization.expiration;
				}
				sezzle.order.updateOrder(order);
			}
		});
	} catch (e) {
		logger.error('Sezzle Capturing error. Details - {0}', e);
		return false;
	}
	return true;
}


function init(basket, applicablePaymentMethods) {
	return sezzle.basket.validatePayments(basket, applicablePaymentMethods);
}

/**
 * Check if Sezzle payment method can be applicable for checkout 
 */

function isSezzleApplicable(){
	var basket = BasketMgr.getCurrentBasket();
	if (!basket.getGiftCertificateLineItems().empty || !sezzle.data.getSezzleOnlineStatus() || sezzle.data.getSezzlePaymentOnlineStatus() || !sezzle.utils.checkBasketTotalRange('object' in basket ? basket.object : basket)) {
		return false;	
	}

	return true;
}

module.exports = {
		Init: init,
		CheckCart: checkCart,
		StoreTokenizeRecord: storeTokenizeRecord,
		PostProcess: postProcess,
		IsSezzleApplicable: isSezzleApplicable
}
