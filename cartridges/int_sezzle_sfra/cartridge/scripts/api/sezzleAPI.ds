(function () {
	/**
	 * Creates library-wrapper for Sezzle API
	 *
	 * @constructor
	 * @this {Api}
	 * @returns Api instance
	 */
	var Api = function () {
		var self = this,
			sezzleData = require('*/cartridge/scripts/data/sezzleData.ds'),
			sezzleBasket = require('*/cartridge/scripts/basket/sezzleBasket.ds'),
			logger = require('dw/system').Logger.getLogger('Sezzle', ''),
			BasketMgr = require('dw/order/BasketMgr');
			
			
		/**
		 * Call Sezzle 
		 *
		 * @param {string} method
		 * @param {string} url
		 * @param {string} payload
		 * @param {string} token
		 * @returns result
		 */
		self.callSezzle = function (method, url, payload , token) {
			try {
				logger.debug("****Requesting Sezzle****");
				var httpClient : dw.net.HTTPClient = new dw.net.HTTPClient();
				httpClient.setRequestHeader('Content-Type', 'application/json');
				if (token != '') {
					httpClient.setRequestHeader('Authorization', 'Bearer '+token);
				}
				var result : JSON;
				var message : String;
				switch (method) {
					case 'POST':
						httpClient.open('POST', url);
						httpClient.send(payload);
						break;
					case 'GET':
						httpClient.open('GET', url);
						httpClient.send();
					default:
						break;
					
				}
				
				if (httpClient.statusCode == 201) {
					message = httpClient.text;
					var result = JSON.parse(message);
					result.httpStatus = httpClient.statusCode;
					logger.debug("****Response successful****");
					return result;
				}
				else if(httpClient.statusCode == 200) {
					message = httpClient.text;
					var result = JSON.parse(message);
					result.httpStatus = httpClient.statusCode;
					logger.debug("****Response successful****");
					return result;
				}
				logger.debug("****Response not successful**** : HTTP Code : {0}",httpClient.statusCode);
				return result;
			}
			catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					CALL_SEZZLE_ERROR : false
				};
			}
			
		}
		
		/**
		 * Authenticate the merchant by public and private key
		 *
		 * @returns {Object} auth token object
		 */
		self.authenticate = function () {
			try {
				logger.debug("Authentication start");
				var public_key = sezzleData.getPublicKey();
				var private_key = sezzleData.getPrivateKey();
				var auth_url = sezzleData.getURLPath() + 'authentication/';
				var payload = {
					'public_key' : public_key,
					'private_key' : private_key
				};	
				var payload = JSON.stringify(payload);
				var result = self.callSezzle('POST', auth_url, payload);
				logger.debug("Authentication end");
				return result;
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					AUTHENTICATE_ERROR : false
				};
			}
		};
		
		/**
		 * Capture charge by order reference ID
		 *
		 * @param {string} order_reference_id ref
		 * @returns status
		 */
		self.capture = function (order_reference_id, order_number) {
			try {
				logger.debug("Capture start");
				var payload : String;
				var authentication = self.authenticate();
				var token = authentication.token;
				var capture_url = sezzleData.getURLPath() + 'checkouts/' + order_reference_id + '/complete' + '?order_no=' + order_number;
				var result = self.callSezzle('POST', capture_url, payload, token);
				logger.debug("Capture end");
				return result;
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					CAPTURE_ERROR : false
				};
			}
		};
		
		/**
		 * Refund payment by order reference ID
		 *
		 * @param {string} order_reference_id
		 * @returns status		 */
		self.refund = function (order_reference_id) {
			try {
				logger.debug("Refund start");
				var authentication = self.authenticate();
				var token = authentication.token;
				var refund_url = sezzleData.getURLPath() + 'orders/' + order_reference_id + '/refund';
				var payload = {
					'is_full_refund' :true	
				};
				var payload = JSON.stringify(payload);
				var result = self.callSezzle('POST', refund_url, payload, token);
				logger.debug("Refund end");
				return result;
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					REFUND_ERROR : false
				};
			}
		};
		
		/**
		 * Get Redirect Url 
		 *
		 * @param {json} checkoutObject
		 * @param {string} token
		 * @returns result
		 */
		self.getRedirectUrl = function (checkoutObject, token) {
			try {
				logger.debug("Getting redirect url start");
				var payload = JSON.stringify(checkoutObject);
				var checkout_url = sezzleData.getURLPath() + 'checkouts/';
				var result = self.callSezzle('POST', checkout_url, payload, token);
				logger.debug("Getting redirect url end");
				return result;
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					REDIRECT_ERROR : false
				};
			}
		}
		
		/**
		 * Initiate a checkout - fetch the checkout url
		 *
		 * @param {Object} - Checkout Object
		 * @returns {Object} object with checkout url
		 */
		self.initiateCheckout = function (checkoutObject) {
			try {
				logger.debug("Initiating checkout start");
				var authentication = self.authenticate();
				var token = authentication.token;
				var result = self.getRedirectUrl(checkoutObject, token);
				logger.debug("Initiating checkout end");
				return result;
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					INITIATE_CHECKOUT_ERROR : false
				};
			}
		};
	};
	
	module.exports = new Api();
}());