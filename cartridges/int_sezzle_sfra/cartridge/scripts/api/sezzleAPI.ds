(function () {
	/**
	 * Creates library-wrapper for Sezzle API
	 *
	 * @constructor
	 * @this {Api}
	 * @returns Api instance
	 */
	var Api = function () {
		var self = this,
			sezzleData = require('*/cartridge/scripts/data/sezzleData.ds'),
			logger = require('dw/system').Logger.getLogger('Sezzle', ''),
			service = require('dw/svc'),
			client = require('dw/net');
		
		/**
		 * Authenticate the merchant by public and private key
		 *
		 * @returns {Object} auth token object
		 */
		self.authenticate = function () {
			try {
				
				var httpClient : dw.net.HTTPClient = new dw.net.HTTPClient();
				var public_key = sezzleData.getPublicKey();
				var private_key = sezzleData.getPrivateKey();
				var auth_url = sezzleData.getURLPath() + 'authentication/';
				
				var obj = new Object();
				obj.public_key = public_key;
				obj.private_key  = private_key;
				var json= JSON.stringify(obj);
				
				var json = {
					'public_key' : public_key,
					'private_key' : private_key
				};
				  
       			var json= JSON.stringify(obj);
				var message : String;
				httpClient.open('POST', auth_url);
				httpClient.setTimeout(3000);
				httpClient.setRequestHeader('Content-Type', 'application/json');
				httpClient.send(json);
				if (httpClient.statusCode == 201)
				{
				 	 logger.debug(auth_url);
				 	 logger.debug('35');
				     message = httpClient.text;
				     logger.debug(json);
				     logger.debug(message);
				     var obj = JSON.parse(message);
				     logger.debug(obj.token);
				}
				else
				{
				 	logger.debug('40');
				 	logger.debug(json);
				 	logger.debug(httpClient.statusCode);
				    // error handling
				    message="An error occurred with status code "+httpClient.statusCode;
				}
				//return resp.object;
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Capture charge by order reference ID
		 *
		 * @param {string} order_reference_id ref
		 * @returns status
		 */
		self.capture = function (order_reference_id, order_number) {
			try {
				var authentication = self.authenticate();
				var obj = {
					authToken : authentication.response.token
				}
				
				var sezzleService = service.ServiceRegistry.get('sezzle.capture');
				sezzleService.URL = sezzleData.getURLPath() + 'checkouts/' + order_reference_id + '/complete' + '?order_no=' + order_number;
				return sezzleService.call(obj).object;
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Refund payment by order reference ID
		 *
		 * @param {string} order_reference_id
		 * @returns status		 */
		self.refund = function (order_reference_id) {
			try {
				var authentication = self.authenticate();
				var obj = {
					authToken : authentication.response.token,
					is_full_refund :true,
					
				}
				
				var sezzleService = service.ServiceRegistry.get('sezzle.refund');
					
				sezzleService.URL = sezzleData.getURLPath() + 'orders/' + order_reference_id + '/refund';
				
				return sezzleService.call(obj).object;
				
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Initiate a checkout - fetch the checkout url
		 *
		 * @param {Object} - Checkout Object
		 * @returns {Object} object with checkout url
		 */
		self.initiateCheckout = function (checkoutObject) {
			try {
				logger.debug('Token');
				var authentication = self.authenticate();
				checkoutObject.authToken = authentication.response.token
				var sezzleService = service.ServiceRegistry.get('sezzle.initiatecheckout');
					
				sezzleService.URL = sezzleData.getURLPath() + 'checkouts/';
				return sezzleService.call(checkoutObject).object;
				
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
	};
	
	module.exports = new Api();
}());