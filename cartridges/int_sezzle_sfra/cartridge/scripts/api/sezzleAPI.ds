(function () {
	/**
	 * Creates library-wrapper for Sezzle API
	 *
	 * @constructor
	 * @this {Api}
	 * @returns Api instance
	 */
	var Api = function () {
		var self = this,
			sezzleData = require('*/cartridge/scripts/data/sezzleData.ds'),
			logger = require('dw/system').Logger.getLogger('Sezzle', ''),
			service = require('*/cartridge/scripts/init/initSezzleServices.ds');
		
		/**
		 * Authenticate the merchant by public and private key
		 *
		 * @returns {Object} auth token object
		 */
		self.authenticate = function () {
			try {
				var sezzleService = service.initService('sezzle.authenticate');
				var public_key = sezzleData.getPublicKey();
				var private_key = sezzleData.getPrivateKey();
					
				sezzleService.URL = sezzleData.getV2URLPath() + 'authentication';
				var resp = sezzleService.call({
					'public_key' : public_key,
					'private_key' : private_key
				});
				return resp.object;
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Capture charge by order UUID
		 *
		 * @param {dw.order.Order} order 
		 * @returns status
		 */
		self.capture = function (order, amount, isPartialCapture) {
			try {
				var authentication = self.authenticate();
				var obj = {
					'authToken' : authentication.response.token,
					'capture_amount': {
								'amount_in_cents': amount,
								'currency': order.getCurrencyCode()
							  },
					'partial_capture': isPartialCapture
				};
				
				var sezzleService = service.initService('sezzle.capture');
				sezzleService.URL = sezzleData.getV2URLPath() + 'order/' + order.custom.SezzleOrderUUID + '/capture';
				return sezzleService.call(obj).object;
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Capture charge by auth UUID
		 *
		 * @param {dw.order.Order} order 
		 * @returns status
		 */
		self.captureByAuthUUID = function (order, amount, isPartialCapture) {
			try {
				var authentication = self.authenticate();
				var obj = {
					'authToken' : authentication.response.token,
					'capture_amount': {
						    'amount_in_cents': amount,
						    'currency': order.getCurrencyCode()
					     },
				    'partial_capture': isPartialCapture
				};
				
				var sezzleService = service.initService('sezzle.capturebyauthuuid');
				sezzleService.URL = sezzleData.getV2URLPath() + 'authorization/' + order.custom.SezzleAuthUUID + '/capture';
				return sezzleService.call(obj).object;
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Get customer UUID by token
		 *
		 * @param {string} token 
		 * @returns status
		 */
		self.getCustomerUUID = function (token) {
			try {
				var authentication = self.authenticate();
				var obj = {
					'authToken' : authentication.response.token,
					'httpMethod': 'GET'
				};
				
				var sezzleService = service.initService('sezzle.getcustomeruuid');
				sezzleService.URL = sezzleData.getV2URLPath() + 'token/' + token + '/session';
				return sezzleService.call(obj).object;
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Get order by order UUID
		 *
		 * @param {dw.order.Order} order 
		 * @returns status
		 */
		self.getOrderByOrderUUID = function (orderUUID) {
			try {
				var authentication = self.authenticate();
				var obj = {
					'authToken' : authentication.response.token,
					'httpMethod': 'GET'
				};
				
				var sezzleService = service.initService('sezzle.getorderbyorderuuid');
				sezzleService.URL = sezzleData.getV2URLPath() + 'order/' + orderUUID;
				return sezzleService.call(obj).object;
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Get order by auth UUID
		 *
		 * @param {dw.order.Order} order 
		 * @returns status
		 */
		self.getOrderByAuthUUID = function (authUUID) {
			try {
				var authentication = self.authenticate();
				var obj = {
					'authToken' : authentication.response.token,
					'httpMethod': 'GET'
				};
				
				var sezzleService = service.initService('sezzle.getorderbyauthuuid');
				sezzleService.URL = sezzleData.getV2URLPath() + 'authorization/' + authUUID;
				return sezzleService.call(obj).object;
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Create order by customer uuid
		 *
		 * @param {string} customerUUID 
		 * @returns {Object}
		 */
		self.createOrderByCustomerUUID = function (requestObj) {
			try {
				var authentication = self.authenticate();
				requestObj.authToken = authentication.response.token;
				var sezzleService = service.initService('sezzle.createorderbycustomeruuid');
				sezzleService.URL = sezzleData.getV2URLPath() + 'customer/' + requestObj.customer_uuid + '/order';
				return sezzleService.call(requestObj).object;
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Refund payment by order UUID
		 *
		 * @param {dw.order.Order} order 
		 * @returns status		 */
		self.refund = function (order, amount) {
			try {
				var authentication = self.authenticate();
				var obj = {
					'authToken' : authentication.response.token,
					'amount_in_cents': amount,
					'currency': order.getCurrencyCode()
				}
				
				var sezzleService = service.initService('sezzle.refund');		
				sezzleService.URL = sezzleData.getV2URLPath() + 'order/' + order.custom.SezzleOrderUUID + '/refund';	
				return sezzleService.call(obj).object;
				
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Refund payment by auth UUID
		 *
		 * @param {dw.order.Order} order 
		 * @returns status		 */
		self.refundByAuthUUID = function (order, amount) {
			try {
				var authentication = self.authenticate();
				var obj = {
					'authToken' : authentication.response.token,
					'amount_in_cents': amount,
					'currency': order.getCurrencyCode()
				}
				var sezzleService = service.initService('sezzle.refundbyauthuuid');		
				sezzleService.URL = sezzleData.getV2URLPath() + 'authorization/' +  order.custom.SezzleAuthUUID + '/refund';	
				return sezzleService.call(obj).object;
				
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Release payment by order UUID
		 *
		 * @param {dw.order.Order} order 
		 * @returns status		 */
		self.release = function (order, amount) {
			try {
				var authentication = self.authenticate();
				var obj = {
					'authToken' : authentication.response.token,
					'amount_in_cents': amount,
					'currency': order.getCurrencyCode()
				}
				var sezzleService = service.initService('sezzle.release');		
				sezzleService.URL = sezzleData.getV2URLPath() + 'order/' + order.custom.SezzleOrderUUID + '/release';	
				return sezzleService.call(obj).object;
				
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Release payment by auth UUID
		 *
		 * @param {dw.order.Order} order 
		 * @returns status		 */
		self.releaseByAuthUUID = function (order, amount) {
			try {
				var authentication = self.authenticate();
				var obj = {
					'authToken' : authentication.response.token,
					'amount_in_cents': amount,
					'currency': order.getCurrencyCode()
				}
				var sezzleService = service.initService('sezzle.releasebyauthuuid');		
				sezzleService.URL = sezzleData.getV2URLPath() + 'authorization/' + order.custom.SezzleAuthUUID + '/release';	
				return sezzleService.call(obj).object;
				
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Update order reference id
		 *
		 * @param {dw.order.Order} order 
		 * @returns status
		 */
		self.updateOrder = function (order) {
			try {
				var authentication = self.authenticate();
				var obj = {
					'authToken' : authentication.response.token,
					'reference_id': order.orderNo,
					'httpMethod': 'PATCH'
				};
				
				var sezzleService = service.initService('sezzle.updateorder');
				sezzleService.URL = sezzleData.getV2URLPath() + 'order/' + order.custom.SezzleOrderUUID;
				return sezzleService.call(obj).object;
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
		
		/**
		 * Initiate a checkout - fetch the checkout url
		 *
		 * @param {Object} - Checkout Object
		 * @returns {Object} object with checkout url
		 */
		self.initiateCheckout = function (checkoutObject) {
			try {
				var authentication = self.authenticate();
				checkoutObject.authToken = authentication.response.token;
				var sezzleService = service.initService('sezzle.initiatecheckout');		
				sezzleService.URL = sezzleData.getV2URLPath() + 'session';
				return sezzleService.call(checkoutObject).object;
			} catch (e) {
				logger.debug('Sezzle. File - sezzleAPI.ds. Error - {0}', e);
				return {
					error : false
				};
			}
		};
	};
	
	module.exports = new Api();
}());
